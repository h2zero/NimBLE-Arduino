From 9cb441213d9c56df44d97fb4eb121f0bb5146ee8 Mon Sep 17 00:00:00 2001
From: Prasad Alatkar <prasad.alatkar@espressif.com>
Date: Fri, 3 Apr 2020 18:42:05 +0530
Subject: [PATCH 1/2] nimble/host: Fix return code in
 `ble_gap_unpair_oldest_peer` when no bonded peer exist

---
 nimble/host/src/ble_gap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/nimble/host/src/ble_gap.c b/src/nimble/host/src/ble_gap.c
index 4729dd02a..b44012d33 100644
--- a/src/nimble/host/src/ble_gap.c
+++ b/src/nimble/host/src/ble_gap.c
@@ -5594,7 +5594,7 @@ ble_gap_unpair_oldest_peer(void)
     }
 
     if (num_peers == 0) {
-        return 0;
+        return BLE_HS_ENOENT;
     }
 
     rc = ble_gap_unpair(&oldest_peer_id_addr);

From bb9303ab2fa33dafdd152be5b31bc07eedf38c24 Mon Sep 17 00:00:00 2001
From: Prasad Alatkar <prasad.alatkar@espressif.com>
Date: Wed, 1 Apr 2020 00:08:29 +0530
Subject: [PATCH 2/2] nimble/store: Fix store behavior when CCCDs exceed
 maximum limit

- Add supporting API to skip input peer while unpairing oldest peer
---
 nimble/host/include/host/ble_gap.h | 14 ++++++++++++++
 nimble/host/src/ble_gap.c          | 30 ++++++++++++++++++++++++++++++
 nimble/host/src/ble_store_util.c   | 16 +++++++++-------
 3 files changed, 53 insertions(+), 7 deletions(-)

diff --git a/src/host/ble_gap.h b/src/host/ble_gap.h
index 20e7dab77..b58f350fb 100644
--- a/src/host/ble_gap.h
+++ b/src/host/ble_gap.h
@@ -1896,6 +1896,20 @@ int ble_gap_unpair(const ble_addr_t *peer_addr);
  */
 int ble_gap_unpair_oldest_peer(void);
 
+/**
+ * Similar to `ble_gap_unpair_oldest_peer()`, except it makes sure that the
+ * peer received in input parameters is not deleted.
+ *
+ * @param peer_addr             Address of the peer (not to be deleted)
+ *
+ * @return                      0 on success;
+ *                              A BLE host HCI return code if the controller
+ *                                  rejected the request;
+ *                              A BLE host core return code on unexpected
+ *                                  error.
+ */
+int ble_gap_unpair_oldest_except(const ble_addr_t *peer_addr);
+
 #define BLE_GAP_PRIVATE_MODE_NETWORK        0
 #define BLE_GAP_PRIVATE_MODE_DEVICE         1
 
diff --git a/src/nimble/host/src/ble_gap.c b/src/nimble/host/src/ble_gap.c
index b44012d33..53c6bf308 100644
--- a/src/nimble/host/src/ble_gap.c
+++ b/src/nimble/host/src/ble_gap.c
@@ -5605,6 +5605,36 @@ ble_gap_unpair_oldest_peer(void)
     return 0;
 }
 
+int
+ble_gap_unpair_oldest_except(const ble_addr_t *peer_addr)
+{
+    ble_addr_t peer_id_addrs[MYNEWT_VAL(BLE_STORE_MAX_BONDS)];
+    int num_peers;
+    int rc, i;
+
+    rc = ble_store_util_bonded_peers(
+            &peer_id_addrs[0], &num_peers, MYNEWT_VAL(BLE_STORE_MAX_BONDS));
+    if (rc != 0) {
+        return rc;
+    }
+
+    if (num_peers == 0) {
+        return BLE_HS_ENOENT;
+    }
+
+    for (i = 0; i < num_peers; i++) {
+        if (ble_addr_cmp(peer_addr, &peer_id_addrs[i]) != 0) {
+            break;
+        }
+    }
+
+    if (i >= num_peers) {
+        return BLE_HS_ENOMEM;
+    }
+
+    return ble_gap_unpair(&peer_id_addrs[i]);
+}
+
 void
 ble_gap_passkey_event(uint16_t conn_handle,
                       struct ble_gap_passkey_params *passkey_params)
diff --git a/src/nimble/host/src/ble_store_util.c b/src/nimble/host/src/ble_store_util.c
index 444cc55d7..7de482721 100644
--- a/src/nimble/host/src/ble_store_util.c
+++ b/src/nimble/host/src/ble_store_util.c
@@ -233,13 +233,15 @@ ble_store_util_status_rr(struct ble_store_status_event *event, void *arg)
     switch (event->event_code) {
     case BLE_STORE_EVENT_OVERFLOW:
         switch (event->overflow.obj_type) {
-            case BLE_STORE_OBJ_TYPE_OUR_SEC:
-            case BLE_STORE_OBJ_TYPE_PEER_SEC:
-            case BLE_STORE_OBJ_TYPE_CCCD:
-                return ble_gap_unpair_oldest_peer();
-
-            default:
-                return BLE_HS_EUNKNOWN;
+        case BLE_STORE_OBJ_TYPE_OUR_SEC:
+        case BLE_STORE_OBJ_TYPE_PEER_SEC:
+            return ble_gap_unpair_oldest_peer();
+        case BLE_STORE_OBJ_TYPE_CCCD:
+            /* Try unpairing oldest peer except current peer */
+            return ble_gap_unpair_oldest_except(&event->overflow.value->cccd.peer_addr);
+
+        default:
+            return BLE_HS_EUNKNOWN;
         }
 
     case BLE_STORE_EVENT_FULL:
